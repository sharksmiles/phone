import Core, { Config, SendOption, SendSuccess, SendFail, SpeedLog } from "../../core/src";
export interface CocosConfig extends Config {
    asyncPlugin?: boolean;
    reportApiSpeed?: boolean | {
        urlHandler: (url: string, payload: object) => string;
    };
    performanceMonitor?: boolean;
    /** 当前页面是否是单页应用 */
    spa?: boolean;
    /** fps上报时间间隔，默认为false不上报，设置为true的话，默认60s上报一次，单位为s */
    fpsReportInterval?: boolean | number;
    /** 获取到首屏渲染时间后调用 */
    afterRenderFirstScreen?: (firstScreenTime: number) => void;
}
export default class Aegis extends Core {
    static sessionID: string;
    constructor(config: CocosConfig);
    afterSceneLanuch(): void;
    get getBean(): string;
    reportSpeed(logs: SpeedLog | SpeedLog[]): void;
    reportFirstScreenTime(duration?: number): void;
    request: (options: SendOption, success?: SendSuccess | undefined, fail?: SendFail | undefined) => void;
    speedLogPipeline: import("../../core/src").Pipeline<any, any>;
    uploadLogs(params?: any, conds?: any): void;
}
