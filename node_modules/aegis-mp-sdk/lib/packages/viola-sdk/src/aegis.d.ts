import Core, { Config, SendOption, SendSuccess, SendFail } from "../../core/src";
export interface ViolaConfig extends Config {
    reportApiSpeed?: boolean;
    beforeReportSpeed?: Function;
    offlineLog?: boolean;
    dbConfig?: any;
    offlineLogExp?: number;
    extRequestOpts?: {
        [key: string]: string | number | boolean;
    };
}
/**
 * 平台编码
 */
declare enum PLATFORM {
    /** 安卓 */
    ANR = 1,
    /** iOS */
    IOS = 2,
    /** 其他(默认) */
    DEFAULT = 100
}
export default class Aegis extends Core {
    static sessionID: string;
    static asyncPluginIndex: number;
    originRequest: (options: Record<string, any>, cb: Function) => Promise<unknown>;
    extRequestOpts: {};
    speedLogPipeline: import("../../core/src").Pipeline<any, any>;
    constructor(config: ViolaConfig);
    /**
     * 获取平台编号
     */
    getPlatform(): PLATFORM;
    /**
     * 设置viola-sdk专用配置
     */
    initViolaConfig(config: ViolaConfig): void;
    get _bean(): string;
    request: (options: SendOption, success?: SendSuccess | undefined, fail?: SendFail | undefined) => void;
    uploadLogs(params?: any, conds?: any): void;
}
export {};
