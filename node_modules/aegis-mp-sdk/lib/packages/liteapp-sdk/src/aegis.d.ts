import Core, { Config, SendFail, SendOption, SendSuccess, SpeedLog } from "../../core/src";
export interface LiteConfig extends Config {
    reportApiSpeed?: boolean;
    beforeReportSpeed?: (log: SpeedLog) => boolean;
    useStore?: boolean;
}
export default class Aegis extends Core {
    static sessionID: string;
    originRequest: (opts: import("./util").OriginRequestReq) => Promise<import("./util").OriginRequestResp>;
    speedLogPipeline: import("../../core/src").Pipeline<any, any>;
    constructor(config: LiteConfig);
    request: (options: SendOption, success?: SendSuccess | undefined, fail?: SendFail | undefined) => void;
    /**
     * 构造请求参数
     * @param url
     * @param options
     * @returns requestOptions
     */
    private genRequestParams;
    uploadLogs(params?: any, conds?: any): void;
    private rewriteNormalLogPipeline;
}
