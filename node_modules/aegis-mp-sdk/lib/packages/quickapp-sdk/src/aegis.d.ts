import Core, { Config, SendOption, SendSuccess, SendFail } from "../../core/src";
export interface QuickappConfig extends Config {
    reportApiSpeed?: boolean;
    beforeReportSpeed?: Function;
    offlineLogLimit?: number;
    offlineLog?: boolean;
    dbConfig?: any;
    offlineLogExp?: number;
}
export default class Aegis extends Core {
    static sessionID: string;
    originRequest: (url: string, options: any) => Promise<unknown>;
    aegisFetch: (url: string, options: any) => Promise<unknown>;
    speedLogPipeline: import("../../core/src").Pipeline<any, any>;
    constructor(config: QuickappConfig);
    initOfflineLog(): void;
    get getBean(): string;
    request: (options: SendOption, success?: SendSuccess | undefined, fail?: SendFail | undefined) => void;
    uploadLogs(params?: any, conds?: any): void;
    /**
       * @description 读取离线日志，在offlineLogPlugin中会重写改方法
       */
    getOfflineLog(): void;
    /**
       * @description 上报离线日志，在offlineLogPlugin中会重写改方法
       * @param logs 日志
       */
    uploadOfflineLogs(_logs: any | any[]): void;
    getFetch(): (url: string, options: any) => Promise<unknown>;
}
